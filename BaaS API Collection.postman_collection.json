{
	"info": {
		"_postman_id": "890bcba8-06d7-4f89-8630-0a61260ed4e5",
		"name": "BaaS API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Onboarding",
			"item": [
				{
					"name": "webhook",
					"item": [
						{
							"name": "webhook KYC",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
											"console.log(seq);\r",
											"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json(),\r",
											"    savedData = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
											"pm.environment.set(\"userId\", savedData.userId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"user_id\": \"usr_3ad58319f95c45c29d8e2f08021657b5\",\r\n \"kyc_status\": \"Approved\",\r\n \"created_time\": \"2019-02-01T11:56:32.727562Z\",\r\n \"source\": \"document_kyc\",\r\n \"docs\": {\r\n \"Photo\": \"https://Photo.jpg\",\r\n \"POI\": \"https://POI.jpg\",\r\n \"POA\": \"https://POA.jpg\"\r\n }\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://baasdevtest.payu.in/user-onboarding/v1/webhook/kycTransition",
									"protocol": "https",
									"host": [
										"baasdevtest",
										"payu",
										"in"
									],
									"path": [
										"user-onboarding",
										"v1",
										"webhook",
										"kycTransition"
									]
								}
							},
							"response": []
						},
						{
							"name": "webhook user info update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
											"console.log(seq);\r",
											"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json(),\r",
											"    savedData = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
											"pm.environment.set(\"userId\", savedData.userId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"address\": {\r\n \"address_id\": \"adr_a57b3ead8a1449e6b6de8fe21e4d8d35\",\r\n \"address_line1\": \"Happay(VA Tech Ventures), \",\r\n \"address_line2\": \"3rd Floor, Delta Block, Sigma Tech Park\",\r\n \"city\": \"Bangalore\",\r\n \"country\": \"India\",\r\n \"pin_code\": \"560043\",\r\n \"state\": \"Karnataka\"\r\n },\r\n \"dob\": \"2019-06-12\",\r\n \"email\": \"bharatwajmajji+455682@gmail.com\",\r\n \"first_name\": \"Bharatwaj\",\r\n \"gender\": \"Male\",\r\n \"last_name\": \"Majji\",\r\n \"middle_name\": \"\",\r\n \"mobile\": \"+91 9944820123\",\r\n \"user_id\": \"usr_2ce2dbe0d57744468c86e7674a768609\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://baasdevtest.payu.in/user-onboarding/v1/webhook/userInfoUpdate",
									"protocol": "https",
									"host": [
										"baasdevtest",
										"payu",
										"in"
									],
									"path": [
										"user-onboarding",
										"v1",
										"webhook",
										"userInfoUpdate"
									]
								}
							},
							"response": []
						},
						{
							"name": "webhook recon",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
											"console.log(seq);\r",
											"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json(),\r",
											"    savedData = JSON.parse(responseBody);\r",
											"\r",
											"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
											"pm.environment.set(\"userId\", savedData.userId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"user_id\": \"usr_3ad58319f95c45c29d8e2f08021657b5\",\r\n \"kyc_status\": \"Approved\",\r\n \"created_time\": \"2019-02-01T11:56:32.727562Z\",\r\n \"source\": \"document_kyc\",\r\n \"docs\": {\r\n \"Photo\": \"https://Photo.jpg\",\r\n \"POI\": \"https://POI.jpg\",\r\n \"POA\": \"https://POA.jpg\"\r\n }\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://baasdevtest.payu.in/user-onboarding/v1/webhook/kycTransition",
									"protocol": "https",
									"host": [
										"baasdevtest",
										"payu",
										"in"
									],
									"path": [
										"user-onboarding",
										"v1",
										"webhook",
										"kycTransition"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "API",
					"item": [
						{
							"name": "For QA - test suite",
							"item": [
								{
									"name": "user profile - green scenario",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjunnn\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"458295{{pan}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/profile",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "user profile with ID - green scenario",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/profile/BLIPA5126ESW",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"profile",
												"BLIPA5126ESW"
											]
										}
									},
									"response": []
								},
								{
									"name": "user profile - incorrect DOB",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjunnn\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"19901-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"458295{{pan}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/profile",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "user profile - missing PAN",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjunnn\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"458295{{pan}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/profile",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "user profile - missing BRAND",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"pan\": \"{{pan}}\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjunnn\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"458295{{pan}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/profile",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "user profile - missing employee id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjunnn\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"Madhya Pradesh\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/profile",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "user profile - missing happay mandatory field state",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjunnn\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"\",\r\n    \"employeeId\": \"458295{{pan}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/profile",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"profile"
											]
										}
									},
									"response": []
								},
								{
									"name": "user profile - missing PAN OR Brand Copy 6",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjunnn\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"458295{{pan}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/profile",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"profile"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "For Developer",
							"item": [
								{
									"name": "addUser",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');\r",
													"pm.environment.set(\"empId\", 'SW_EMP_'+seq);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"yyyy\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"stateId\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"{{empId}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "getUser",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user/{{empId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"{{empId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateUser",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjun\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@abc.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"458295{{pan}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user/{{empId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"{{empId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "getAllUsers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "user onboard",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"hub-user-id\", 'hub_id_'+seq);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"hubUserId\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user/{{empId}}/onboard",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"{{empId}}",
												"onboard"
											]
										}
									},
									"response": []
								},
								{
									"name": "card-details",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/card/{{hub-user-id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"card",
												"{{hub-user-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "validate-card-cvv",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cardLastFourDigit\": \"{{card_last_four_digits}}\",\r\n    \"cardFirstFourDigit\":\"7588\",\r\n    \"hubUserID\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/v1/card/validate-digits",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"validate-digits"
											]
										}
									},
									"response": []
								},
								{
									"name": "validate-card-kit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cardKitId\": \"STAG0005131\",\r\n    \"hubUserID\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/v1/card/validate-kit",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"validate-kit"
											]
										}
									},
									"response": []
								},
								{
									"name": "card-image",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/card/{{hub-user-id}}/card-image",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"card",
												"{{hub-user-id}}",
												"card-image"
											]
										}
									},
									"response": []
								},
								{
									"name": "card-fulfillment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/v1/card/{{hub-user-id}}/card-fulfillment",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"{{hub-user-id}}",
												"card-fulfillment"
											]
										}
									},
									"response": []
								},
								{
									"name": "validate-pan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"pan\": \"BLIPA0571E\",\r\n    \"hubUserID\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/v1/card/validate-pan",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"validate-pan"
											]
										}
									},
									"response": []
								},
								{
									"name": "set-transaction-modes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"hubUserID\": \"{{hub-user-id}}\",\r\n    \"transactionModes\": [\r\n        {\r\n           \"txn_mode\": null,\r\n            \"allow\": true,\r\n            \"channel\": \"ECOM\",\r\n            \"location\": \"DOM\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/v1/card/transaction-modes",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"transaction-modes"
											]
										}
									},
									"response": []
								},
								{
									"name": "get-transaction-modes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/v1/card/{{hub-user-id}}/transaction-modes",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"{{hub-user-id}}",
												"transaction-modes"
											]
										}
									},
									"response": []
								},
								{
									"name": "block-card",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n        \"reason\":\"Temp\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/v1/card/{{hub-user-id}}/block",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"{{hub-user-id}}",
												"block"
											]
										}
									},
									"response": []
								},
								{
									"name": "unblock-card",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/v1/card/{{hub-user-id}}/unblock",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"{{hub-user-id}}",
												"unblock"
											]
										}
									},
									"response": []
								},
								{
									"name": "set-limits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"hubUserID\": \"{{hub-user-id}}\",\r\n    \"limitConfigs\": [\r\n\t\t{\r\n\t\t\t\"channel\": \"POS\",\r\n\t\t\t\"location\": \"DOM\",\r\n\t\t\t\"thresholds\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"amount_limit\": 5000,\r\n\t\t\t\t\t\"target_duration\": \"DAY\",\r\n\t\t\t\t\t\"usage_limit\": 10\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"txn_mode\": \"CONTACTLESS\"\r\n\t\t}\r\n\t]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/v1/card/limits",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"limits"
											]
										}
									},
									"response": []
								},
								{
									"name": "user onboard by id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is not 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"console.log(response);\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "baasdevtest.payu.in",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user/{{empId}}/onboard",
											"protocol": "https",
											"host": [
												"baasdevtest",
												"payu",
												"in"
											],
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"{{empId}}",
												"onboard"
											]
										}
									},
									"response": []
								},
								{
									"name": "get-limits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/v1/card/{{hub-user-id}}/limits",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"v1",
												"card",
												"{{hub-user-id}}",
												"limits"
											]
										}
									},
									"response": []
								},
								{
									"name": "user earning",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \r\n    \"brandEmpId\":\"SW12346\",\r\n    \"brandId\":\"SW\",\r\n    \"brandEventId\":\"{{$guid}}\",\r\n    \"userId\":\"{{pan}}SW\",\r\n    \"amount\":\"1000\"\r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user/earning",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"earning"
											]
										}
									},
									"response": []
								},
								{
									"name": "kyc-aadhar-xml-verification",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"passcode\": \"1234\",\r\n\t\"hub_user_id\": \"{{hub-user-id}}\",\r\n\t\"xml\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user/kyc/aadhar-xml-verification",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"kyc",
												"aadhar-xml-verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "kyc-pan-verification",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"consent_form_signed\": true,\r\n    \"dob\": \"1990/03/07\",\r\n    \"pan\": \"{{pan}}\",\r\n    \"pan_verified_name\": \"Arjun Kumar\",\r\n    \"hub_user_id\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user/kyc/pan-verification",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"kyc",
												"pan-verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "kyc-location-verification",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lat\": \"28.704060\",\r\n\t\"long\": \"77.102493\",\r\n    \"hub_user_id\": \"{{hub-user-id}}\",\r\n    \"ip_address\":\"192.1.1.1\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user/kyc/location-verification",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"kyc",
												"location-verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "kyc-photo-liveness-verification Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "live_photo",
													"type": "file",
													"src": "/D:/payu/other/photo-liveness.jpg"
												},
												{
													"key": "hub_user_id",
													"value": "{{hub-user-id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/user/kyc/photo-liveness-verification",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"user",
												"kyc",
												"photo-liveness-verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "recon webhook",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Secret-Key",
												"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"app_id\": \"app_b1232db4ca0a11ebb0a70242ac110002\",\r\n    \"bin_id\": \"758874\",\r\n    \"link\": \"https://cms-matrix-dev.s3.ap-south-1.amazonaws.com/isacreport/app_b1232db4ca0a11ebb0a70242ac110002/2021/July/9/a6f9be6e405745cd8b1b5a99513ccca4/758874_2021-07-09.xlsx?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIASXMJT3QELEOWMS56%2F20211101%2Fap-south-1%2Fs3%2Faws4_request&X-Amz-Date=20211101T161148Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=17e3ab1ac353ec88c430703ecddb33acfeef09789b32bc3276504b0f0cf9f1cf\",\r\n    \"recon_date\": \"2021-07-09\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5001/user-onboarding/v1/webhook/reconFileEvent",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5001",
											"path": [
												"user-onboarding",
												"v1",
												"webhook",
												"reconFileEvent"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Regression Microservice APIs",
							"item": [
								{
									"name": "addBrandUser",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"pan\", 'BLIPA'+seq+'E');\r",
													"pm.environment.set(\"empId\", 'SWIG_EMP_'+seq);\r",
													"\r",
													"\r",
													"pm.environment.set(\"hub-user-id\", 'hub_id_'+seq);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SWIG\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"yyyy\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@xyz.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"stateId\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"{{empId}}\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "getBrandUser",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user/{{empId}}",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user",
												"{{empId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "updateBrandUser",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\r\n{\r\n    \"pan\": \"{{pan}}\",\r\n    \"brandId\": \"SW\",\r\n    \"title\": \"Mr\",\r\n    \"firstName\": \"arjun\",\r\n    \"lastName\": \"kumar\",\r\n    \"gender\": \"male\",\r\n    \"dob\": \"1990-03-07\",\r\n    \"email\": \"arjun.kumar@abc.com\",\r\n    \"country\": \"India\",\r\n    \"countryCode\": \"+91\",\r\n    \"mobileNumber\": \"9876543210\",\r\n    \"addressLine1\": \"Green corridor\",\r\n    \"addressLine2\": \"Green village 123\",\r\n    \"city\": \"Neemuch\",\r\n    \"pinCode\": \"458295\",\r\n    \"state\": \"Madhya Pradesh\",\r\n    \"employeeId\": \"458295{{pan}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user/{{empId}}",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user",
												"{{empId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "getAllBrandUsers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "user onboard",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var seq = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r",
													"console.log(seq);\r",
													"pm.environment.set(\"hub-user-id\", 'hub_id_'+seq);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);\r",
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"addressCommunicationId\", savedData.addressID);\r",
													"pm.environment.set(\"userId\", savedData.userId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"hubUserId\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user/{{empId}}/onboard",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user",
												"{{empId}}",
												"onboard"
											]
										}
									},
									"response": []
								},
								{
									"name": "validate-pan",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"pan\": \"{{pan}}\",\r\n    \"hubUserID\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/validate-pan",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"validate-pan"
											]
										}
									},
									"response": []
								},
								{
									"name": "card-details",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);\r",
													"let response = pm.response.json(),\r",
													"    savedData = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"card_last_four_digits\", savedData.lastFourDigits);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/{{hub-user-id}}",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"{{hub-user-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "card-image",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/{{hub-user-id}}/card-image",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"{{hub-user-id}}",
												"card-image"
											]
										}
									},
									"response": []
								},
								{
									"name": "card-fulfillment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/{{hub-user-id}}/card-fulfillment",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"{{hub-user-id}}",
												"card-fulfillment"
											]
										}
									},
									"response": []
								},
								{
									"name": "block-card",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n        \"reason\":\"Temp\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/{{hub-user-id}}/block",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"{{hub-user-id}}",
												"block"
											]
										}
									},
									"response": []
								},
								{
									"name": "unblock-card",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/{{hub-user-id}}/unblock",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"{{hub-user-id}}",
												"unblock"
											]
										}
									},
									"response": []
								},
								{
									"name": "validate-card-digits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cardFirstFourDigit\": \"7588\",\r\n    \"cardLastFourDigit\": \"{{card_last_four_digits}}\",\r\n    \"hubUserID\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/validate-digits",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"validate-digits"
											]
										}
									},
									"response": []
								},
								{
									"name": "validate-card-kit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cardKitId\": \"STAG0005131\",\r\n    \"hubUserID\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/validate-kit",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"validate-kit"
											]
										}
									},
									"response": []
								},
								{
									"name": "set-transaction-modes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"hubUserID\": \"{{hub-user-id}}\",\r\n    \"transactionModes\": [\r\n        {\r\n           \"txn_mode\": null,\r\n            \"allow\": true,\r\n            \"channel\": \"ECOM\",\r\n            \"location\": \"DOM\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/transaction-modes",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"transaction-modes"
											]
										}
									},
									"response": []
								},
								{
									"name": "get-transaction-modes",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/{{hub-user-id}}/transaction-modes",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"{{hub-user-id}}",
												"transaction-modes"
											]
										}
									},
									"response": []
								},
								{
									"name": "set-limits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"hubUserID\": \"{{hub-user-id}}\",\r\n    \"limitConfigs\": [\r\n\t\t{\r\n\t\t\t\"channel\": \"POS\",\r\n\t\t\t\"location\": \"DOM\",\r\n\t\t\t\"thresholds\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"amount_limit\": 5000,\r\n\t\t\t\t\t\"target_duration\": \"DAY\",\r\n\t\t\t\t\t\"usage_limit\": 10\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"txn_mode\": \"CONTACTLESS\"\r\n\t\t}\r\n\t]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/limits",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"limits"
											]
										}
									},
									"response": []
								},
								{
									"name": "get-limits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/card/{{hub-user-id}}/limits",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"card",
												"{{hub-user-id}}",
												"limits"
											]
										}
									},
									"response": []
								},
								{
									"name": "user earning",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \r\n    \"brandEmpId\":\"{{empId}}\",\r\n    \"brandId\":\"SW\",\r\n    \"brandEventId\":\"{{$guid}}\",\r\n    \"userId\":\"{{pan}}SW\",\r\n    \"amount\":\"1000\"\r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user/earning",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user",
												"earning"
											]
										}
									},
									"response": []
								},
								{
									"name": "kyc-pan-verification",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"consent_form_signed\": true,\r\n    \"dob\": \"1992/03/07\",\r\n    \"pan\": \"BJQPP5524G\",\r\n    \"pan_verified_name\": \"SANJAY KUMAR PRAJAPATI\",\r\n    \"hub_user_id\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user/kyc/pan-verification",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user",
												"kyc",
												"pan-verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "kyc-location-verification",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lat\": \"28.704060\",\r\n\t\"long\": \"77.102493\",\r\n    \"ip_address\":\"192.1.1.1\",\r\n    \"hub_user_id\": \"{{hub-user-id}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user/kyc/location-verification",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user",
												"kyc",
												"location-verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "kyc-aadhar-xml-verification",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"passcode\": \"1234\",\r\n\t\"hub_user_id\": \"{{hub-user-id}}\",\r\n\t\"xml\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user/kyc/aadhar-xml-verification",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user",
												"kyc",
												"aadhar-xml-verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "kyc-photo-liveness-verification",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"console.log(pm.response);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "live_photo",
													"type": "file",
													"src": "/D:/payu/other/photo-liveness.jpg"
												},
												{
													"key": "hub_user_id",
													"value": "{{hub-user-id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/user/kyc/photo-liveness-verification",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"user",
												"kyc",
												"photo-liveness-verification"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TXN",
							"item": [
								{
									"name": "Auth-Stub",
									"item": [
										{
											"name": "AUTH_RHA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"auth_txn_log_id\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance\",  (pm.environment.get(\"target_account_balance\") - req.txn_details.amount)); \r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\")- req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"account_balance\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{auth_txn_log_id}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Auth-In-Order",
									"item": [
										{
											"name": "AUTH_RHA1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"rha1\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_RHA2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"rha2\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_WH1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\") - req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_WH2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    pm.environment.set(\"account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha2}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Auth-Stub Delay",
									"item": [
										{
											"name": "AUTH_RHA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"auth_txn_log_id\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance\",  (pm.environment.get(\"target_account_balance\") - req.txn_details.amount));\r",
															"    \r",
															"      pm.environment.set(\"target_account_balance_rha1\",  pm.environment.get(\"target_account_balance\"));\r",
															"      pm.environment.set(\"target_account_balance_rha2\",  pm.environment.get(\"target_account_balance\")); \r",
															"       pm.environment.set(\"target_account_balance_rha3\",  pm.environment.get(\"target_account_balance\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"Debit\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", req.target_account_balance[0].balance);\r",
															"    } else if(pm.response.code === 400) {\r",
															"        pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance\")+req.txn_amount);\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{auth_txn_log_id}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Auth-txn-to-apply",
									"item": [
										{
											"name": "AUTH_RHA1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"rha1\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/rha/evaluate/transaction",
													"host": [
														"{{private-host-vpn}}"
													],
													"path": [
														"{{user-onboarding-microservice}}",
														"v1",
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_RHA2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha2\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/rha/evaluate/transaction",
													"host": [
														"{{private-host-vpn}}"
													],
													"path": [
														"{{user-onboarding-microservice}}",
														"v1",
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_WH2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha2}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance_rha2}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/webhook/transaction",
													"host": [
														"{{private-host-vpn}}"
													],
													"path": [
														"{{user-onboarding-microservice}}",
														"v1",
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_WH1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } \r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance_rha1}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/webhook/transaction",
													"host": [
														"{{private-host-vpn}}"
													],
													"path": [
														"{{user-onboarding-microservice}}",
														"v1",
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "AUTH_WH1 Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } \r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance_rha1}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/webhook/transaction",
													"host": [
														"{{private-host-vpn}}"
													],
													"path": [
														"{{user-onboarding-microservice}}",
														"v1",
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Adjustment",
									"item": [
										{
											"name": "RHA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"auth_txn_log_id\", req.txn_log_id);\r",
															"      console.log();\r",
															"      pm.environment.set(\"target_account_balance\",  (pm.environment.get(\"target_account_balance\") - req.txn_details.amount)); \r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{auth_txn_log_id}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "ADJUSTMENT_WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", req.target_account_balance[0].balance - req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance\", req.target_account_balance[0].balance - req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance\"));\r",
															"    } \r",
															"    else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"original_txn_id\": \"{{auth_txn_log_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"ADJUSTMENT\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "fp_ae_cleared",
									"item": [
										{
											"name": "RHA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"     if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"auth_txn_log_id\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance\",  (pm.environment.get(\"target_account_balance\") - req.txn_details.amount)); \r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"       pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\")- req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"account_balance\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{auth_txn_log_id}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{ac_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "FP_AE_CLEARED_WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\") +  req.acquiring_amount));\r",
															"        pm.environment.set(\"target_account_balance\", pm.environment.get(\"account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance\"));\r",
															"        \r",
															"        pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance\"));\r",
															"\r",
															"        pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance\"));\r",
															"\r",
															"    } \r",
															"    else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let txn = pm.environment.get(\"txn_amount\");\r",
															"let ac = pm.environment.get(\"ac_amount\");\r",
															"pm.environment.set(\"ac_amount\", txn - ac);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"original_txn_id\": \"{{auth_txn_log_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"FP_AE_CLEARED\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{ac_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "fp_ce_cleared",
									"item": [
										{
											"name": "RHA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"     if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"auth_txn_log_id\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance\",  (pm.environment.get(\"target_account_balance\") - req.txn_details.amount)); \r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"       pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\")- req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"account_balance\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{auth_txn_log_id}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "FP_CE_CLEARED_WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", (req.target_account_balance[0].balance + req.acquiring_amount));\r",
															"        pm.environment.set(\"target_account_balance\", (req.target_account_balance[0].balance + req.acquiring_amount));\r",
															"        \r",
															"        pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance\"));\r",
															"        \r",
															"        pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance\"));\r",
															"\r",
															"        pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance\"));\r",
															"    } \r",
															"    else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let ac_amount = pm.environment.get(\"txn_amount\");\r",
															"pm.environment.set(\"ac_amount\", 110);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"original_txn_id\": \"{{auth_txn_log_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"FP_CE_CLEARED\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{ac_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Idempotency",
									"item": [
										{
											"name": "Idempotency_RHA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"auth_txn_log_id\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance\", req.account_balance.amount - req.txn_details.amount);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", req.account_balance.amount - req.txn_details.amount);\r",
															"      pm.environment.set(\"target_account_balance_rha2\", req.account_balance.amount - req.txn_details.amount);\r",
															"    } \r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"IdempotencyRHA\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Idempotency_WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", req.target_account_balance[0].balance);\r",
															"    } \r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"{{auth_txn_log_id}}\",\r\n   \"txn_log_id\": \"IdempotencyRHA\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Refund",
									"item": [
										{
											"name": "RHA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"auth_txn_log_id\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance\",  (pm.environment.get(\"target_account_balance\") - req.txn_details.amount)); \r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\")- req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"account_balance\"));\r",
															"        pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"account_balance\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{auth_txn_log_id}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "REFUND_WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha1\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha2\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"    } \r",
															"    else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"original_txn_id\": \"{{auth_txn_log_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"CLEARING_REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Reversal",
									"item": [
										{
											"name": "REVERSAL_RHA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"      pm.environment.set(\"auth_txn_log_id\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance\",  (pm.environment.get(\"target_account_balance\") - req.txn_details.amount));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "REVERSAL_WH",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance\",(pm.environment.get(\"target_account_balance\") + req.txn_amount));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{auth_txn_log_id}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Reversal-In-Order",
									"item": [
										{
											"name": "R1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha1\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "R2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha2\", req.txn_log_id);\r",
															"     pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") - req.txn_details.amount));\r",
															"     pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "RW1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") + req.txn_amount));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "RW2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") + req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") + req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance\", (pm.environment.get(\"target_account_balance\") + req.txn_amount));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha2}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Reversal-txn-to-apply",
									"item": [
										{
											"name": "R1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha1\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "R2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha2\", req.txn_log_id);\r",
															"     pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") - req.txn_details.amount));\r",
															"     pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "RW2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") + req.txn_amount));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha2}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "RW1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"   pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") + req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") + req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance\", (pm.environment.get(\"target_account_balance\") + req.txn_amount));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "R1_R2_RW1_W2_R3_W3_RFW3",
									"item": [
										{
											"name": "R1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha1\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "R2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha2\", req.txn_log_id);\r",
															"     pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") - req.txn_details.amount));\r",
															"     pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "RW1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") + req.txn_amount));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "W2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\") - req.txn_amount));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha2}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "R3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha3\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"      pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "password",
															"value": "h@pp@yrh@!2",
															"type": "string"
														},
														{
															"key": "username",
															"value": "happayrha",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host-dns-rha}}",
													"host": [
														"{{host-dns-rha}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "W3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\") - req.txn_amount));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha3}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "RFW3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha1\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha2\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"    } \r",
															"    else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"original_txn_id\": \"{{rha2}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"CLEARING_REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "R1_R2_RW2_W1_R3_RW3",
									"item": [
										{
											"name": "R1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha1\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "R2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha2\", req.txn_log_id);\r",
															"     pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") - req.txn_details.amount));\r",
															"     pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "RW2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha2}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "W1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\") - req.txn_amount));\r",
															"    pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"account_balance\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "R3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha3\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"      pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"      pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "RW3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") + req.txn_amount));\r",
															"    pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha3}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "R1_R2_W1_R3_W2_W3",
									"item": [
										{
											"name": "R1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha1\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"      pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "R2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha2\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"      pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "W1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\") - req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance\", (pm.environment.get(\"target_account_balance_rha2\")));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance_rha1}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "R3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha3\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha3\", (pm.environment.get(\"target_account_balance_rha3\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "W2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    pm.environment.set(\"account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha2}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance_rha2}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "W3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    pm.environment.set(\"account_balance\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha3}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "R1_R2_W1_R3_W2_W3_AEW1_RFW2",
									"item": [
										{
											"name": "R1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha1\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha1\", (pm.environment.get(\"target_account_balance_rha1\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"      pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "R2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha2\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha2\", (pm.environment.get(\"target_account_balance_rha2\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"      pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha1\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "W1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\") - req.txn_amount));\r",
															"        pm.environment.set(\"target_account_balance\", (pm.environment.get(\"target_account_balance_rha2\")));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha1}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance_rha1}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "R3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"     pm.environment.set(\"rha3\", req.txn_log_id);\r",
															"      pm.environment.set(\"target_account_balance_rha3\", (pm.environment.get(\"target_account_balance_rha3\") - req.txn_details.amount));\r",
															"      pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 402) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-20T12:10:44.342339Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"mid\":\"ABC123TESTMTF19\",\r\n   \"rrn\":\"080000000013\",\r\n   \"stan\":\"HAKUU32423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"is_afd_applicable\":false,\r\n   \"acquiring_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   },\r\n   \"txn_details\":{\r\n      \"amount\": {{txn_amount}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      },\r\n      \"fee_details\":{\r\n         \"fee_applicable\":false,\r\n         \"amount\":0,\r\n         \"currency\":{\r\n            \"alpha_code\":\"\",\r\n            \"numeric_code\":0,\r\n            \"exponent\":0\r\n         }\r\n      }\r\n   },\r\n   \"merchant\":{\r\n      \"name\":\"Misc Retail\",\r\n      \"city\":\"Vegas\",\r\n      \"state\":\" N\",\r\n      \"country\":\"V \",\r\n      \"formatted_name\":\"Misc Retail/Vegas/ N/V \"\r\n   },\r\n   \"authentication_details\":{\r\n      \"pin_verified\":true,\r\n      \"cvv_verified\":true\r\n   },\r\n   \"account_balance\":{\r\n      \"amount\": {{account_balance}},\r\n      \"currency\":{\r\n         \"alpha_code\":\"INR\",\r\n         \"numeric_code\":356,\r\n         \"exponent\":2\r\n      }\r\n   }\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/rha/evaluate/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"rha",
														"evaluate",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "W2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    pm.environment.set(\"account_balance\", pm.environment.get(\"target_account_balance_rha2\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha2}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance_rha2}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "W3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"    pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    pm.environment.set(\"target_account_balance\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    pm.environment.set(\"account_balance\", pm.environment.get(\"target_account_balance_rha3\"));\r",
															"    } else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"{{rha3}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"AUTH\",\r\n   \"txn_code\":\"DEBIT\",\r\n   \"txn_indicator\":\"Debit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "AEW1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", req.target_account_balance[0].balance - req.acquiring_amount + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance\", req.target_account_balance[0].balance - req.acquiring_amount + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"target_account_balance_rha1\") - req.acquiring_amount + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"target_account_balance_rha2\") - req.acquiring_amount  + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"target_account_balance_rha3\") - req.acquiring_amount  + req.txn_amount);\r",
															"    } \r",
															"    else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"let ac_amount = pm.environment.get(\"txn_amount\");\r",
															"pm.environment.set(\"ac_amount\", ac_amount - 10);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"original_txn_id\": \"{{rha1}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"FP_AE_CLEARED\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{ac_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										},
										{
											"name": "RFW2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let req = JSON.parse(request.data);\r",
															"let res = pm.response.status;\r",
															"pm.test('Check Status', () => {\r",
															"    if(pm.response.code === 200) {\r",
															"        pm.environment.set(\"account_balance\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha1\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"        pm.environment.set(\"target_account_balance_rha2\", req.target_account_balance[0].balance + req.txn_amount);\r",
															"    } \r",
															"    else if(pm.response.code === 400) {\r",
															"        postman.setNextRequest(null);\r",
															"    }\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Secret-Key",
														"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n   \"entry_id\": \"txn_{{$randomUUID}}\",\r\n   \"txn_log_id\": \"txn_{{$randomUUID}}\",\r\n   \"user_id\": \"{{user_id}}\",\r\n   \"account_id\": \"{{account_id}}\",\r\n   \"card_id\": \"{{card_id}}\",\r\n   \"original_txn_id\": \"{{rha2}}\",\r\n   \"txn_date\":\"2020-01-23T19:27:20.538441Z\",\r\n   \"txn_type\":\"CLEARING_REVERSAL\",\r\n   \"txn_code\":\"CREDIT\",\r\n   \"txn_indicator\":\"Credit\",\r\n   \"acquiring_amount\": {{txn_amount}},\r\n   \"acquiring_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"txn_amount\": {{txn_amount}},\r\n   \"txn_currency\":{\r\n      \"alpha_code\":\"INR\",\r\n      \"numeric_code\":356\r\n   },\r\n   \"auth_code\":\"\",\r\n   \"channel\":\"POS\",\r\n   \"mcc\":\"5999\",\r\n   \"merchant\":\"Misc /Vegas/ N/V \",\r\n   \"mid\":\"ABC123TTMTF19\",\r\n   \"rrn\":\"0800000013\",\r\n   \"stan\":\"HAKUU423\",\r\n   \"terminal_id\":\"MTF TEST\",\r\n   \"aid\":\"999901\",\r\n   \"txn_status\": \"0\",\r\n   \"remarks\":\"\",\r\n   \"rha\": {\r\n\t\t\"configured\": true,\r\n\t\t\"response_status\": 200\r\n\t},\r\n   \"target_account_balance\":[\r\n      {\r\n         \"balance\": {{target_account_balance}},\r\n         \"currency\": \"INR\"\r\n      }\r\n   ],\r\n   \"funding_account_balance\":[\r\n      {\r\n         \"balance\":199009600,\r\n         \"currency\":\"INR\"\r\n      }\r\n   ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{host}}/webhook/transaction",
													"host": [
														"{{host}}"
													],
													"path": [
														"webhook",
														"transaction"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Recharge",
							"item": [
								{
									"name": "LOAD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let req = JSON.parse(request.data);\r",
													"let res = pm.response.status;\r",
													"pm.test('Check Status', () => {\r",
													"    if(pm.response.code === 200) {\r",
													"    pm.environment.set(\"account_balance\", pm.environment.get(\"load_balance\"));\r",
													"pm.environment.set(\"target_account_balance\", pm.environment.get(\"load_balance\"));\r",
													"pm.environment.set(\"target_account_balance_rha1\", pm.environment.get(\"load_balance\"));\r",
													"pm.environment.set(\"target_account_balance_rha2\", pm.environment.get(\"load_balance\"));\r",
													"pm.environment.set(\"target_account_balance_rha3\", pm.environment.get(\"load_balance\"));\r",
													"    } \r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Secret-Key",
												"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"currency\": \"INR\",\r\n\t\"account_id\": \"{{account_id}}\",\r\n\t\"amount\": {{load_balance}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{private-host-vpn}}/{{user-onboarding-microservice}}/v1/webhook/loadExtendEvent?type=LOAD",
											"host": [
												"{{private-host-vpn}}"
											],
											"path": [
												"{{user-onboarding-microservice}}",
												"v1",
												"webhook",
												"loadExtendEvent"
											],
											"query": [
												{
													"key": "type",
													"value": "LOAD"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "UnLOAD",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let req = JSON.parse(request.data);\r",
													"let res = pm.response.status;\r",
													"pm.test('Check Status', () => {\r",
													"    if(pm.response.code === 200) {\r",
													"    pm.environment.set(\"account_balance\", (pm.environment.get(\"account_balance\") - req.amount));\r",
													"    pm.environment.set(\"target_account_balance\", (pm.environment.get(\"target_account_balance\") - req.amount));\r",
													"    } \r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Secret-Key",
												"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"currency\": \"INR\",\r\n\t\"account_id\": \"{{account_id}}\",\r\n\t\"amount\": 6001000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://10.248.6.49:8081/user-onboarding/v1/webhook/unLoadWithdrawEvent?type=UNLOAD",
											"protocol": "http",
											"host": [
												"10",
												"248",
												"6",
												"49"
											],
											"port": "8081",
											"path": [
												"user-onboarding",
												"v1",
												"webhook",
												"unLoadWithdrawEvent"
											],
											"query": [
												{
													"key": "type",
													"value": "UNLOAD"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Dispute",
							"item": [
								{
									"name": "Create Dispute",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Secret-Key",
												"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"dispute_amount_currency\": \"INR\",\r\n\t\"reason\": \"ATM_CASH_NOT_DISPENSED\",\r\n\t\"transaction_id\": \"txn_9b692620-6a2d-495f-b1e4-67bea1910a72\",\r\n\t\"comment\": \"Partial amount received\",\r\n\t\"dispute_amount\": 10\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/webhook/dispute",
											"host": [
												"{{host}}"
											],
											"path": [
												"webhook",
												"dispute"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Dispute Comment by Dispute Id",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"comment\": \"Partial amount received\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/dispute/comment/{{dispute_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"dispute",
												"comment",
												"{{dispute_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Dispute Status by Dispute Id",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": \"Closed_Or_Resolved\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/dispute/status/{{dispute_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"dispute",
												"status",
												"{{dispute_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Dispute by Dispute Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/dispute/{{dispute_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"dispute",
												"{{dispute_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Utility",
					"item": [
						{
							"name": "health check user-onboarding",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "baasdevtest.payu.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "8888",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://10.248.6.49:8081/user-onboarding/actuator/health",
									"protocol": "http",
									"host": [
										"10",
										"248",
										"6",
										"49"
									],
									"port": "8081",
									"path": [
										"user-onboarding",
										"actuator",
										"health"
									]
								}
							},
							"response": []
						},
						{
							"name": "refresh user-onboariding",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Host",
										"value": "baasdevtest.payu.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "8888",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://10.248.6.49:8081/user-onboarding/actuator/refresh",
									"protocol": "http",
									"host": [
										"10",
										"248",
										"6",
										"49"
									],
									"port": "8081",
									"path": [
										"user-onboarding",
										"actuator",
										"refresh"
									]
								}
							},
							"response": []
						},
						{
							"name": "refresh UOB local",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Host",
										"value": "baasdevtest.payu.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "8888",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5001/user-onboarding/actuator/refresh",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"user-onboarding",
										"actuator",
										"refresh"
									]
								}
							},
							"response": []
						},
						{
							"name": "config server properties",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://10.248.6.49:8888/configserver/user-onboarding/DEV",
									"protocol": "http",
									"host": [
										"10",
										"248",
										"6",
										"49"
									],
									"port": "8888",
									"path": [
										"configserver",
										"user-onboarding",
										"DEV"
									]
								}
							},
							"response": []
						},
						{
							"name": "config server encrypt properties",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "sometext"
								},
								"url": {
									"raw": "http://10.248.6.49:8888/configserver/encrypt",
									"protocol": "http",
									"host": [
										"10",
										"248",
										"6",
										"49"
									],
									"port": "8888",
									"path": [
										"configserver",
										"encrypt"
									]
								}
							},
							"response": []
						},
						{
							"name": "config server decrypt properties",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "type cipher text here"
								},
								"url": {
									"raw": "http://10.248.6.49:8888/configserver/decrypt",
									"protocol": "http",
									"host": [
										"10",
										"248",
										"6",
										"49"
									],
									"port": "8888",
									"path": [
										"configserver",
										"decrypt"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Orchestration",
			"item": [
				{
					"name": "Test",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/orchestration",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"orchestration"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Happay",
			"item": [
				{
					"name": "Webhook",
					"item": []
				},
				{
					"name": "APIs",
					"item": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Under-Writer",
			"item": []
		},
		{
			"name": "Brand",
			"item": []
		},
		{
			"name": "Re-Tool APIs",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://baasdevtest.payu.in/user-onboarding/v1/user",
							"protocol": "https",
							"host": [
								"baasdevtest",
								"payu",
								"in"
							],
							"path": [
								"user-onboarding",
								"v1",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dispute",
			"item": [
				{
					"name": "Create Dispute",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Secret-Key",
								"value": "TPC201P15WCU2TZ2FRY960FZ2Y3B4W2XL2MAI6OYNC29WHT4CJ9MXGF7NB6X",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"dispute_amount_currency\": \"INR\",\r\n\t\"reason\": \"ATM_CASH_NOT_DISPENSED\",\r\n\t\"transaction_id\": \"t1\",\r\n\t\"comment\": \"Partial amount received\",\r\n\t\"dispute_amount\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://10.248.6.49:8081/user-onboarding/v1/webhook/dispute",
							"protocol": "http",
							"host": [
								"10",
								"248",
								"6",
								"49"
							],
							"port": "8081",
							"path": [
								"user-onboarding",
								"v1",
								"webhook",
								"dispute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Dispute Comment by Dispute Id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"comment\": \"Partial amount received\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/dispute/comment/{{dispute_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"dispute",
								"comment",
								"{{dispute_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Dispute Status by Dispute Id",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"Closed_Or_Resolved\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/dispute/status/{{dispute_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"dispute",
								"status",
								"{{dispute_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Dispute by Dispute Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/dispute/{{dispute_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"dispute",
								"{{dispute_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}